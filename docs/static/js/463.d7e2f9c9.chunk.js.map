{"version":3,"file":"static/js/463.d7e2f9c9.chunk.js","mappings":"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","sources":["components/InvesmentCalculator/InvestmentCalculator.js","pages/AssetManagementPage/AssetManagementPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip as RechartsTooltip,\n  CartesianGrid,\n  PieChart,\n  Pie,\n  Cell,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport {\n  TextField,\n  MenuItem,\n  Grid,\n  Typography,\n  Card,\n  CardContent,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  InputLabel,\n  InputAdornment,\n  Divider,\n} from '@mui/material';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { formatCurrency, parseCurrency } from '../../utils/format';\nimport './InvestmentCalculator.scss';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nconst InvestmentCalculator = () => {\n  const [startingAmount, setStartingAmount] = useState(5000);\n  const [additionalContribution, setAdditionalContribution] = useState(100);\n  const [contributionFrequency, setContributionFrequency] = useState('Weekly');\n  const [rateOfReturn, setRateOfReturn] = useState(10);\n  const [yearsToGrow, setYearsToGrow] = useState(10);\n  const [investmentData, setInvestmentData] = useState([]);\n  const [totalValue, setTotalValue] = useState(0);\n\n  const contributionFrequencyMap = {\n    Weekly: 52,\n    Monthly: 12,\n    Yearly: 1,\n  };\n\n  useEffect(() => {\n    calculateInvestment();\n  }, [\n    startingAmount,\n    additionalContribution,\n    rateOfReturn,\n    yearsToGrow,\n    contributionFrequency,\n  ]);\n\n  const calculateInvestment = () => {\n    let data = [];\n    let totalInterest = 0;\n    let currentAmount = parseFloat(startingAmount) || 0; // Ensure startingAmount is a number\n    const frequency = contributionFrequencyMap[contributionFrequency];\n    const annualContribution =\n      parseFloat(additionalContribution) * frequency || 0;\n    const rate = parseFloat(rateOfReturn) / 100 || 0;\n\n    for (let year = 0; year < yearsToGrow; year++) {\n      const interestEarned = currentAmount * rate;\n      totalInterest += interestEarned;\n      currentAmount += annualContribution + interestEarned;\n\n      // Ensure currentAmount is a number before applying toFixed()\n      data.push({\n        year: new Date().getFullYear() + year,\n        startingAmount: startingAmount,\n        annualContribution: annualContribution,\n        totalContributions: (annualContribution * (year + 1)).toFixed(2),\n        interestEarned: interestEarned.toFixed(2),\n        totalInterest: totalInterest.toFixed(2),\n        endBalance: currentAmount.toFixed(2), // Ensure valid number\n      });\n    }\n\n    setInvestmentData(data);\n    setTotalValue(currentAmount.toFixed(2)); // Ensure valid number\n  };\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\n\n  // Adjust the barData to include startingAmount as a stackable field\n  const barData = investmentData.map((item) => ({\n    year: item.year,\n    startingAmount: startingAmount,\n    totalContributions: item.totalContributions,\n    interestEarned: item.totalInterest,\n    endBalance: item.endBalance, // Add endBalance here\n  }));\n\n  // Pie chart data includes startingAmount as well\n  const pieData = [\n    { name: 'Starting Amount', value: startingAmount },\n    {\n      name: 'Total Contributions',\n      value:\n        additionalContribution *\n        contributionFrequencyMap[contributionFrequency] *\n        yearsToGrow,\n    },\n    {\n      name: 'Total Interest Earned',\n      value: parseFloat(\n        (\n          totalValue -\n          startingAmount -\n          additionalContribution *\n            contributionFrequencyMap[contributionFrequency] *\n            yearsToGrow\n        ).toFixed(2)\n      ), // Ensure we round it to two decimal places\n    },\n  ];\n\n  // Custom Tooltip component for the BarChart\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n\n      return (\n        <div\n          className='custom-tooltip'\n          style={{\n            backgroundColor: '#fff',\n            padding: '8px',\n            border: '1px solid #ccc',\n            borderRadius: '5px',\n            fontSize: '14px',\n            minWidth: '250px', // Ensure enough space for alignment\n          }}>\n          <p\n            className='label'\n            style={{ marginBottom: '5px' }}>{`In the year ${label},`}</p>\n\n          {/* Interest Earned */}\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              margin: '3px 0',\n            }}>\n            <span style={{ display: 'flex', alignItems: 'center' }}>\n              <span\n                style={{\n                  display: 'inline-block',\n                  width: '8px',\n                  height: '8px',\n                  backgroundColor: '#FFBB28',\n                  borderRadius: '50%',\n                  marginRight: '5px',\n                }}\n              />\n              Total Interest Earned\n            </span>\n            <span>{formatCurrency(data.interestEarned)}</span>\n          </div>\n\n          {/* Total Contributions */}\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              margin: '3px 0',\n            }}>\n            <span style={{ display: 'flex', alignItems: 'center' }}>\n              <span\n                style={{\n                  display: 'inline-block',\n                  width: '8px',\n                  height: '8px',\n                  backgroundColor: '#00C49F',\n                  borderRadius: '50%',\n                  marginRight: '5px',\n                }}\n              />\n              Total Contributions\n            </span>\n            <span>{formatCurrency(data.totalContributions)}</span>\n          </div>\n\n          {/* Starting Amount */}\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              margin: '3px 0',\n            }}>\n            <span style={{ display: 'flex', alignItems: 'center' }}>\n              <span\n                style={{\n                  display: 'inline-block',\n                  width: '8px',\n                  height: '8px',\n                  backgroundColor: '#0088FE',\n                  borderRadius: '50%',\n                  marginRight: '5px',\n                }}\n              />\n              Starting Amount\n            </span>\n            <span>{formatCurrency(data.startingAmount)}</span>\n          </div>\n\n          {/* End Balance */}\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              margin: '3px 0',\n              fontWeight: 'bold',\n            }}>\n            <span>End Balance</span>\n            <span>{formatCurrency(data.endBalance)}</span>\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  // Custom Tooltip component for the PieChart\n  const CustomPieTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0];\n\n      return (\n        <div\n          className='custom-tooltip'\n          style={{\n            backgroundColor: '#fff',\n            padding: '10px',\n            border: '1px solid #ccc',\n            borderRadius: '5px',\n          }}>\n          <p\n            className='label'\n            style={{\n              fontWeight: 'bold',\n              padding: '0',\n              margin: '0',\n            }}>{`${data.name}`}</p>\n          <p style={{ color: data.fill }}>{`${formatCurrency(data.value)}`}</p>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className='investment-calculator mt-'>\n      <Typography variant='h4' align='center' gutterBottom>\n        Investment Return & Growth Calculator\n      </Typography>\n\n      {/* Inputs Section */}\n      <Card style={{ padding: '20px', marginBottom: '20px' }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6} md={2}>\n            <TextField\n              fullWidth\n              label='Starting Amount'\n              value={\n                startingAmount === '' ? '' : formatCurrency(startingAmount)\n              } // Display the formatted value\n              onChange={(e) => {\n                const rawValue = parseCurrency(e.target.value); // Parse the value to remove commas and dollar signs\n                setStartingAmount(rawValue); // Store the raw value in the state\n              }}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>$</InputAdornment>\n                ),\n                inputMode: 'numeric', // Ensure numeric input\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={2}>\n            <TextField\n              fullWidth\n              label='Additional Contribution'\n              value={\n                additionalContribution === ''\n                  ? ''\n                  : formatCurrency(additionalContribution)\n              } // Display the formatted value\n              onChange={(e) => {\n                const rawValue = parseCurrency(e.target.value); // Parse the value to remove commas and dollar signs\n                setAdditionalContribution(rawValue); // Store the raw value in the state\n              }}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>$</InputAdornment>\n                ),\n                inputMode: 'numeric', // Ensure numeric input\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={2}>\n            <FormControl fullWidth>\n              <InputLabel id='demo-simple-select-helper-label'>\n                Contribution Frequency\n              </InputLabel>\n\n              <Select\n                fullWidth\n                labelId='demo-simple-select-helper-label'\n                label='Contribution Frequency'\n                value={contributionFrequency}\n                onChange={(e) => setContributionFrequency(e.target.value)}>\n                <MenuItem value='Weekly'>Weekly</MenuItem>\n                <MenuItem value='Monthly'>Monthly</MenuItem>\n                <MenuItem value='Yearly'>Yearly</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <TextField\n              fullWidth\n              label='Rate of Return (%)'\n              type='text'\n              value={rateOfReturn}\n              onChange={(e) => {\n                const value = e.target.value;\n                // Regex to allow only numbers with up to two decimal places\n                if (value === '' || /^\\d+(\\.\\d{0,2})?$/.test(value)) {\n                  setRateOfReturn(value); // Allow valid input only\n                }\n              }}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                endAdornment: <InputAdornment position='end'>%</InputAdornment>, // Correct placement of %\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <TextField\n              fullWidth\n              label='Years to Grow'\n              type='number'\n              value={yearsToGrow}\n              onChange={(e) => setYearsToGrow(parseFloat(e.target.value))}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n        </Grid>\n      </Card>\n      <Card>\n        <CardContent>\n          {/* Displaying the Investment Result */}\n          <Typography\n            variant='h4'\n            align='center'\n            gutterBottom\n            style={{ margin: '1rem 0 3rem' }}>\n            This investment will be worth:{' '}\n            <span style={{ color: '#1976D2' }}>\n              {formatCurrency(totalValue)}\n            </span>\n          </Typography>\n\n          {/* Charts Section */}\n          <Grid container spacing={4}>\n            {/* Investment Growth Over Time (Bar Chart) */}\n            <Grid item xs={12} md={6}>\n              <Typography variant='h6' align='center' gutterBottom>\n                Investment Growth Over Time\n              </Typography>\n              <ResponsiveContainer width='100%' height={450}>\n                <BarChart data={barData}>\n                  <CartesianGrid vertical={false} strokeDasharray='3 3' />\n                  <XAxis dataKey='year' />\n                  <YAxis tickFormatter={(tick) => formatCurrency(tick)} />{' '}\n                  {/* Format Y-axis */}\n                  <RechartsTooltip content={<CustomTooltip />} />\n                  <Bar dataKey='startingAmount' stackId='a' fill='#0088FE' />\n                  <Bar\n                    dataKey='totalContributions'\n                    stackId='a'\n                    fill='#00C49F'\n                  />\n                  <Bar dataKey='interestEarned' stackId='a' fill='#FFBB28' />\n                </BarChart>\n              </ResponsiveContainer>\n            </Grid>\n\n            <Grid item>\n              <Divider\n                orientation='vertical'\n                flexItem\n                style={{ height: '100%' }}\n              />\n            </Grid>\n            {/* Investment Balance at Final Year (Pie Chart) */}\n            <Grid\n              item\n              xs={12}\n              md={5}\n              container\n              direction='column'\n              alignItems='center'\n              justifyContent='center'>\n              <Typography variant='h6' align='center' gutterBottom>\n                Investment Balance at Year\n              </Typography>\n              <Typography variant='h6' align='center' gutterBottom>\n                {investmentData.length\n                  ? investmentData[investmentData.length - 1].year\n                  : ''}\n              </Typography>\n              <ResponsiveContainer width='100%' height={400}>\n                <PieChart>\n                  <Pie\n                    data={pieData}\n                    dataKey='value'\n                    nameKey='name'\n                    cx='50%'\n                    cy='50%'\n                    outerRadius={120}\n                    fill='#82ca9d'>\n                    {pieData.map((entry, index) => (\n                      <Cell\n                        key={`cell-${index}`}\n                        fill={COLORS[index % COLORS.length]}\n                      />\n                    ))}\n                  </Pie>\n                  <RechartsTooltip content={<CustomPieTooltip />} />\n                  <Legend\n                    layout='vertical'\n                    align='center'\n                    verticalAlign='bottom'\n                    formatter={(value, entry) => {\n                      return (\n                        <span>\n                          <span style={{ paddingLeft: 10, color: 'black' }}>\n                            {value}\n                          </span>\n                          <span\n                            style={{\n                              float: 'right',\n                              color: 'black',\n                              paddingLeft: 20,\n                            }}>\n                            {formatCurrency(entry.payload.value)}\n                          </span>\n                        </span>\n                      );\n                    }}\n                  />\n                </PieChart>\n              </ResponsiveContainer>\n            </Grid>\n          </Grid>\n\n          <TableContainer style={{ marginTop: '5rem' }}>\n            <Table\n              sx={{ minWidth: 650 }}\n              size='small'\n              aria-label='a dense table'>\n              <TableHead>\n                <StyledTableRow>\n                  <StyledTableCell>Year</StyledTableCell>\n                  <StyledTableCell>Starting Amount</StyledTableCell>\n                  <StyledTableCell>Annual Contribution</StyledTableCell>\n                  <StyledTableCell>Total Contributions</StyledTableCell>\n                  <StyledTableCell>Interest Earned</StyledTableCell>\n                  <StyledTableCell>Total Interest Earned</StyledTableCell>\n                  <StyledTableCell>End Balance</StyledTableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {investmentData.map((row, index) => (\n                  <StyledTableRow key={index}>\n                    <StyledTableCell>{row.year}</StyledTableCell>\n                    <StyledTableCell>\n                      {formatCurrency(row.startingAmount)}\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      {formatCurrency(row.annualContribution)}\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      {formatCurrency(row.totalContributions)}\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      {formatCurrency(row.interestEarned)}\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      {formatCurrency(row.totalInterest)}\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      {formatCurrency(row.endBalance)}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default InvestmentCalculator;\n","// src/containers/AssetManagement/AssetManagement.js\nimport React from 'react';\nimport AssetManagementCard from '../../components/AssetManagementCard/AssetManagementCard';\nimport InvestmentCalculator from '../../components/InvesmentCalculator/InvestmentCalculator';\n\nconst AssetManagement = () => {\n  return (\n    <div className='container'>\n      <InvestmentCalculator />\n      {/*<div className='hero-section'>\n        <h1>Asset Allocation</h1>\n      </div>\n     <AssetManagementCard />*/}\n    </div>\n  );\n};\n\nexport default AssetManagement;\n"],"names":["StyledTableCell","styled","TableCell","_ref","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref2","action","hover","border","InvestmentCalculator","startingAmount","setStartingAmount","useState","additionalContribution","setAdditionalContribution","contributionFrequency","setContributionFrequency","rateOfReturn","setRateOfReturn","yearsToGrow","setYearsToGrow","investmentData","setInvestmentData","totalValue","setTotalValue","contributionFrequencyMap","Weekly","Monthly","Yearly","useEffect","calculateInvestment","data","totalInterest","currentAmount","parseFloat","frequency","annualContribution","rate","year","interestEarned","push","Date","getFullYear","totalContributions","toFixed","endBalance","COLORS","barData","map","item","pieData","name","value","CustomTooltip","_ref3","active","payload","label","length","_jsxs","className","style","padding","borderRadius","minWidth","children","_jsx","marginBottom","display","justifyContent","margin","alignItems","width","height","marginRight","formatCurrency","fontWeight","CustomPieTooltip","_ref4","fill","Typography","variant","align","gutterBottom","Card","Grid","container","spacing","xs","sm","md","TextField","fullWidth","onChange","e","rawValue","parseCurrency","target","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","position","inputMode","FormControl","InputLabel","id","Select","labelId","MenuItem","type","test","endAdornment","CardContent","ResponsiveContainer","BarChart","CartesianGrid","vertical","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","tick","RechartsTooltip","content","Bar","stackId","Divider","orientation","flexItem","direction","PieChart","Pie","nameKey","cx","cy","outerRadius","entry","index","Cell","Legend","layout","verticalAlign","formatter","paddingLeft","float","TableContainer","marginTop","Table","sx","size","TableHead","TableBody","row","AssetManagement"],"sourceRoot":""}