{"version":3,"file":"static/js/436.24761ee2.chunk.js","mappings":"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","sources":["features/stocks/stockSelectors.js","features/user/userThunks.js","features/news/newsSelectors.js","components/TradingViewWidget.js","pages/HomePage/HomePage.js"],"sourcesContent":["// src/features/stocks/stockSelectors.js\nimport { createSelector } from '@reduxjs/toolkit';\n\n// Selector to get detailed stock information\nexport const selectStockDetails = (state, symbol) =>\n  state.stocks.stockDetails[symbol] || {};\n\n// Selector to get the full response data of a specific stock ticker\n//export const selectStockTickerData = (state, ticker) => state.stocks.stockTickerData[ticker] || {};\n\n// Selector to get stock snapshot data for a given ticker\nexport const selectStockSnapshot = (state, ticker) =>\n  state.stocks.stockTickerData[ticker];\n\n// Selector to get stock price\nexport const selectStockPrice = createSelector(\n  [selectStockSnapshot],\n  (stockSnapshot) => stockSnapshot?.prevDay?.c ?? 0\n);\n\n// Selector to get the 'prevDay' closing price ('c') for a given symbol\nexport const selectPrevDayClosingPrice = createSelector(\n  [selectStockSnapshot],\n  (stockData) => stockData?.prevDay?.c ?? null\n);\n\n// Selector to get a specific field of a stock's data\nexport const selectStockField = createSelector(\n  [selectStockSnapshot, (_, field) => field],\n  (stockData, field) => (stockData ? stockData[field] : null)\n);\n\n// Selector to get any error in the stocks slice\nexport const selectStockError = (state) => state.stocks.error;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setUserSymbol } from './userSlice';\nimport { fetchStockSnapshot } from '../stocks/stockThunks';\nimport { fetchNews } from '../news/newsThunks';\nimport { fetchWatchlistData } from '../watchlist/watchlistThunks';\n\nexport const setSymbolAndFetchData = createAsyncThunk(\n  'user/setSymbolAndFetchData',\n  async (symbol, { dispatch }) => {\n    dispatch(setUserSymbol(symbol));\n    await dispatch(fetchStockSnapshot(symbol));\n    await dispatch(fetchNews(symbol));\n    await dispatch(fetchWatchlistData([symbol]));\n  }\n);\n","// src/features/news/newsSelectors.js\nexport const selectNewsArticles = (state) => state.news.articles;\nexport const selectNewsLoading = (state) => state.news.loading;\nexport const selectNewsError = (state) => state.news.error;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction TradingViewWidget({ symbol }) {\n  const container = useRef();\n  const theme = useSelector((state) => state.theme || 'light');\n  const widgetInitialized = useRef(false); // Track widget initialization\n\n  useEffect(() => {\n    const initializeWidget = () => {\n      if (!symbol) {\n        console.error('Invalid or missing symbol for TradingView widget');\n        return;\n      }\n\n      if (!container.current) {\n        console.error('Container for TradingView widget is not available');\n        return;\n      }\n\n      // Prevent reinitialization if the widget is already initialized\n      if (widgetInitialized.current) {\n        console.log('Widget already initialized');\n        return;\n      }\n\n      container.current.innerHTML = ''; // Clear previous widget content\n\n      const script = document.createElement('script');\n      script.src =\n        'https://s3.tradingview.com/external-embedding/embed-widget-advanced-chart.js';\n      script.type = 'text/javascript';\n      script.async = true;\n      script.innerHTML = JSON.stringify({\n        autosize: true,\n        symbol: symbol,\n        interval: 'D',\n        timezone: 'exchange',\n        theme: theme,\n        style: '1',\n        locale: 'en',\n        toolbar_bg: '#f1f3f6',\n        enable_publishing: false,\n        withdateranges: true,\n        hide_side_toolbar: false,\n        allow_symbol_change: true,\n        show_popup_button: true,\n        popup_width: '1000',\n        popup_height: '650',\n      });\n\n      container.current.appendChild(script);\n      widgetInitialized.current = true; // Mark the widget as initialized\n      console.log('Widget initialized successfully');\n    };\n\n    setTimeout(() => {\n      initializeWidget(); // Add a delay to ensure the DOM is ready\n    }, 100); // Reduce the delay to 500ms or adjust as needed\n\n    return () => {\n      if (container.current) {\n        container.current.innerHTML = ''; // Cleanup previous widget content on unmount\n        widgetInitialized.current = false; // Reset initialization status\n        console.log('Cleaning up widget');\n      }\n    };\n  }, [symbol, theme]); // Reinitialize when symbol or theme changes\n\n  return (\n    <div\n      className='tradingview-widget-container'\n      ref={container}\n      style={{ height: '500px', width: '100%' }}>\n      <div\n        className='tradingview-widget-container__widget'\n        style={{ height: '100%', width: '100%' }}></div>\n    </div>\n  );\n}\n\nexport default React.memo(TradingViewWidget);\n","import React, { useEffect, Suspense, lazy, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSymbolAndFetchData } from '../../features/user/userThunks'; // Unified thunk to handle symbol changes and fetching data\nimport { fetchStocks } from '../../features/stocks/stockThunks'; // Fetch stock prices\nimport {\n  selectStockData,\n  selectStockError,\n} from '../../features/stocks/stockSelectors'; // Stock selectors\nimport { selectNewsError } from '../../features/news/newsSelectors'; // News selectors\nimport TradingViewWidget from '../../components/TradingViewWidget'; // Remove lazy loading temporarily\n\n// Lazy loading components\nconst CompoundInterestCalculator = lazy(() =>\n  import(\n    '../../components/CompoundInterestCalculator/CompoundInterestCalculator'\n  )\n);\nconst PercentageDifferenceCalculator = lazy(() =>\n  import(\n    '../../components/PercentageDifferenceCalculator/PercentageDifferenceCalculator'\n  )\n);\n\nconst NewsFeed = lazy(() => import('../../components/NewsFeed/NewsFeed'));\nconst OptionPremiumCalculator = lazy(() =>\n  import('../../components/OptionPremiumCalculator/OptionPremiumCalculator')\n);\nconst StockWatchlist = lazy(() =>\n  import('../../components/StockWatchlist/StockWatchlist')\n);\nconst DollarCostAveragingCalculator = lazy(() =>\n  import(\n    '../../components/DollarCostAveragingCalculator/DollarCostAveragingCalculator'\n  )\n);\nconst TopMovers = lazy(() => import('../../components/TopMovers/TopMovers'));\nconst DividendInfo = lazy(() =>\n  import('../../components/DividendInfo/DividendInfo')\n);\nconst MuiCalendar = lazy(() => import('../../components/Calendar/MuiCalendar'));\nconst Calculator = lazy(() => import('../../components/Calculator/Calculator'));\nconst PortfolioValueCard = lazy(() =>\n  import('../../components/PortfolioValueCard/PortfolioValueCard')\n);\n\nconst HomePage = () => {\n  const symbol = useSelector((state) => state.user.symbol); // Using symbol from Redux\n  const newsError = useSelector(selectNewsError); // Use news error selector\n  const stockError = useSelector(selectStockError); // Use stock error selector\n  const dispatch = useDispatch();\n\n  const totalValue = 123456.78; // Example total portfolio value\n\n  const [showWidget, setShowWidget] = useState(false);\n  const [isSymbolValid, setIsSymbolValid] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchStocks()); // Fetch stock data on page load\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (symbol) {\n      console.log('Dispatching setSymbolAndFetchData for symbol:', symbol);\n      dispatch(setSymbolAndFetchData(symbol)); // No need for a delay if Redux ensures readiness\n      setIsSymbolValid(true);\n    } else {\n      setIsSymbolValid(false);\n    }\n  }, [dispatch, symbol]);\n\n  useEffect(() => {\n    if (isSymbolValid) {\n      setShowWidget(true);\n    } else {\n      setShowWidget(false);\n    }\n  }, [isSymbolValid]);\n\n  return (\n    <div className='container-fluid'>\n      <div className='hero-section'>\n        {stockError && (\n          <div className='alert alert-danger'>{stockError.message}</div>\n        )}\n        <div className='stock-data' style={{ height: '600px' }}>\n          {/* Test with a defined height */}\n          {isSymbolValid ? (\n            <Suspense fallback={<div>Loading...</div>}>\n              {showWidget ? (\n                <TradingViewWidget symbol={symbol} />\n              ) : (\n                <div>Loading widget...</div>\n              )}\n            </Suspense>\n          ) : (\n            <div>Please select a valid stock symbol.</div>\n          )}\n        </div>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <div className='row my-2'>\n          <div className='col-md-3'>\n            <PortfolioValueCard totalValue={totalValue} />\n            <TopMovers />\n          </div>\n          <div className='col-md-3'>\n            <DollarCostAveragingCalculator />\n            <StockWatchlist />\n            <MuiCalendar />\n          </div>\n          <div className='col-md-3'>\n            <OptionPremiumCalculator />\n          </div>\n          <div className='col-md-3'>\n            <PercentageDifferenceCalculator />\n            <Calculator />\n          </div>\n        </div>\n\n        <div className='row my-3'>\n          <div className='col-md-9'>\n            <DividendInfo />\n            <CompoundInterestCalculator />\n          </div>\n        </div>\n\n        <div className='row my-3'>\n          <div className='col-md-12'>\n            <h3 className='text-center news-headline'>Related News</h3>\n            {newsError && (\n              <div className='alert alert-danger'>{newsError.message}</div>\n            )}\n            <NewsFeed />\n          </div>\n        </div>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["selectStockDetails","state","symbol","stocks","stockDetails","selectStockSnapshot","ticker","stockTickerData","selectStockPrice","createSelector","stockSnapshot","_stockSnapshot$prevDa","_stockSnapshot$prevDa2","prevDay","c","selectStockError","stockData","_stockData$prevDay$c","_stockData$prevDay","_","field","error","setSymbolAndFetchData","createAsyncThunk","async","_ref","dispatch","setUserSymbol","fetchStockSnapshot","fetchNews","fetchWatchlistData","selectNewsError","news","TradingViewWidget","container","useRef","theme","useSelector","widgetInitialized","useEffect","setTimeout","initializeWidget","console","current","log","innerHTML","script","document","createElement","src","type","JSON","stringify","autosize","interval","timezone","style","locale","toolbar_bg","enable_publishing","withdateranges","hide_side_toolbar","allow_symbol_change","show_popup_button","popup_width","popup_height","appendChild","_jsx","className","ref","height","width","children","React","CompoundInterestCalculator","lazy","PercentageDifferenceCalculator","NewsFeed","OptionPremiumCalculator","StockWatchlist","DollarCostAveragingCalculator","TopMovers","DividendInfo","MuiCalendar","Calculator","PortfolioValueCard","HomePage","user","newsError","stockError","useDispatch","showWidget","setShowWidget","useState","isSymbolValid","setIsSymbolValid","fetchStocks","_jsxs","message","Suspense","fallback","totalValue"],"sourceRoot":""}