{"version":3,"file":"static/js/417.df2f52cc.chunk.js","mappings":"oQAIA,MAAMA,EAAe,CACnB,UACA,UACA,UACA,UACA,UACA,WAkGF,EA/F4BC,KAE1B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CACrCC,WAAY,EACZC,WAAY,EACZC,QAAS,EACTC,OAAQ,EACRC,SAAU,EACVC,UAAW,IAIPC,EAAkBC,OAAOC,OAAOX,GAASY,QAC7C,CAACC,EAAKC,IAAUD,EAAME,WAAWD,GAAS,IAC1C,GAIIE,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEJ,GAAUG,EAAEE,OAC1BlB,GAAYmB,IAAW,IAClBA,EACH,CAACF,GAAOJ,KACP,EAICO,EAAYX,OAAOY,KAAKtB,GAASuB,KAAKC,IAAM,CAChDN,KAAMM,EACNV,MAAOC,WAAWf,EAAQwB,IAAW,OAGvC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACF,EAAAA,EAAKG,OAAM,CAAAF,SAAC,sBACbC,EAAAA,EAAAA,KAACF,EAAAA,EAAKI,KAAI,CAAAH,UACRF,EAAAA,EAAAA,MAACM,EAAAA,EAAG,CAAAJ,SAAA,EAEFC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,EAAEN,UACTC,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAAAP,SACFjB,OAAOY,KAAKtB,GAASuB,KAAI,CAACC,EAAQW,KACjCV,EAAAA,EAAAA,MAACS,EAAAA,EAAKE,MAAK,CAAaC,GAAIN,EAAAA,EAAKO,UAAU,OAAMX,SAAA,EAC/CF,EAAAA,EAAAA,MAACS,EAAAA,EAAKK,MAAK,CAACC,QAAM,EAACC,GAAI,EAAEd,SAAA,CACtBH,EAAO,QAEVI,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACS,GAAI,EAAEd,UACTC,EAAAA,EAAAA,KAACM,EAAAA,EAAKQ,QAAO,CACXC,KAAK,SACLzB,KAAMM,EACNV,MAAOd,EAAQwB,GACfoB,SAAU5B,EACV6B,IAAI,IACJC,YAAa,oBAAoBtB,UAXtBW,UAoBvBV,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACC,GAAI,EAAEN,SAAA,EACTC,EAAAA,EAAAA,KAACmB,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAItB,UAC5CF,EAAAA,EAAAA,MAACyB,EAAAA,EAAQ,CAAAvB,SAAA,EACPC,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CACFC,KAAM/B,EACNgC,QAAQ,QACRC,QAAQ,OACRC,GAAG,MACHC,GAAG,MACHC,YAAa,GACbC,KAAK,UACLC,OAAK,EAAAhC,SACJN,EAAUE,KAAI,CAACqC,EAAOzB,KACrBP,EAAAA,EAAAA,KAACiC,EAAAA,EAAI,CAEHH,KAAM5D,EAAaqC,EAAQrC,EAAagE,SADnC,QAAQ3B,UAKnBP,EAAAA,EAAAA,KAACmC,EAAAA,EAAO,SAGXtD,EAAkB,IACjBmB,EAAAA,EAAAA,KAAA,OAAKU,UAAU,mBAAkBX,UAC/BF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAAQ,sBAAoBlB,EAAgBuD,QAAQ,kBAMzD,ECzFX,EAXwBC,KAEpBxC,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWX,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,eAAcX,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBAENC,EAAAA,EAAAA,KAAC7B,EAAmB,M","sources":["components/AssetManagementCard/AssetManagementCard.js","pages/AssetManagementPage/AssetManagementPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Form, Col, Row } from 'react-bootstrap';\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst sectorColors = [\n  '#0088FE',\n  '#00C49F',\n  '#FFBB28',\n  '#FF8042',\n  '#AA00FF',\n  '#FF5733',\n];\n\nconst AssetManagementCard = () => {\n  // Initial state with different sectors\n  const [sectors, setSectors] = useState({\n    Technology: 0,\n    Healthcare: 0,\n    Finance: 0,\n    Energy: 0,\n    Consumer: 0,\n    Utilities: 0,\n  });\n\n  // Calculate total allocation\n  const totalAllocation = Object.values(sectors).reduce(\n    (acc, value) => acc + parseFloat(value || 0),\n    0\n  );\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setSectors((prevSectors) => ({\n      ...prevSectors,\n      [name]: value,\n    }));\n  };\n\n  // Prepare data for Recharts\n  const chartData = Object.keys(sectors).map((sector) => ({\n    name: sector,\n    value: parseFloat(sectors[sector] || 0),\n  }));\n\n  return (\n    <Card>\n      <Card.Header>Asset Management</Card.Header>\n      <Card.Body>\n        <Row>\n          {/* Left Column for Inputs */}\n          <Col md={6}>\n            <Form>\n              {Object.keys(sectors).map((sector, index) => (\n                <Form.Group key={index} as={Row} className='mb-3'>\n                  <Form.Label column sm={4}>\n                    {sector}:\n                  </Form.Label>\n                  <Col sm={8}>\n                    <Form.Control\n                      type='number'\n                      name={sector}\n                      value={sectors[sector]}\n                      onChange={handleInputChange}\n                      min='0'\n                      placeholder={`Enter amount for ${sector}`}\n                    />\n                  </Col>\n                </Form.Group>\n              ))}\n            </Form>\n          </Col>\n\n          {/* Right Column for Donut Chart */}\n          <Col md={6}>\n            <ResponsiveContainer width='100%' height={300}>\n              <PieChart>\n                <Pie\n                  data={chartData}\n                  dataKey='value'\n                  nameKey='name'\n                  cx='50%'\n                  cy='50%'\n                  outerRadius={80}\n                  fill='#8884d8'\n                  label>\n                  {chartData.map((entry, index) => (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={sectorColors[index % sectorColors.length]}\n                    />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n            {totalAllocation > 0 && (\n              <div className='text-center mt-3'>\n                <strong>Total Allocation: ${totalAllocation.toFixed(2)}</strong>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default AssetManagementCard;\n","// src/containers/AssetManagement/AssetManagement.js\nimport React from 'react';\nimport AssetManagementCard from '../../components/AssetManagementCard/AssetManagementCard';\n\nconst AssetManagement = () => {\n  return (\n    <div className='container'>\n      <div className='hero-section'>\n        <h1>Asset Allocation</h1>\n      </div>\n      <AssetManagementCard />\n    </div>\n  );\n};\n\nexport default AssetManagement;\n"],"names":["sectorColors","AssetManagementCard","sectors","setSectors","useState","Technology","Healthcare","Finance","Energy","Consumer","Utilities","totalAllocation","Object","values","reduce","acc","value","parseFloat","handleInputChange","e","name","target","prevSectors","chartData","keys","map","sector","_jsxs","Card","children","_jsx","Header","Body","Row","Col","md","Form","index","Group","as","className","Label","column","sm","Control","type","onChange","min","placeholder","ResponsiveContainer","width","height","PieChart","Pie","data","dataKey","nameKey","cx","cy","outerRadius","fill","label","entry","Cell","length","Tooltip","toFixed","AssetManagement"],"sourceRoot":""}