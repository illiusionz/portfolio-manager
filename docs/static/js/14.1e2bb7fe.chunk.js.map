{"version":3,"file":"static/js/14.1e2bb7fe.chunk.js","mappings":"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","sources":["components/StockHoverPopup/StockHoverPopup.js","components/TrendingToolbar/TrendingToolbar.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport { addToWatchlist } from '../../features/watchlist/watchlistSlice'; // Updated path\nimport './_stockHoverPopup.scss';\n\nconst StockHoverPopup = ({ stock, position }) => {\n  const dispatch = useDispatch();\n\n  if (!stock) return null;\n\n  const changePercent = stock.todaysChangePerc.toFixed(2);\n  const changeClass = changePercent >= 0 ? 'positive' : 'negative';\n  const arrowIcon = changePercent >= 0 ? faArrowUp : faArrowDown;\n\n  const handleAddToWatchlist = () => {\n    dispatch(addToWatchlist(stock.ticker));\n    console.log(`Added ${stock.ticker} to watchlist`);\n  };\n\n  console.log('Displaying popup for stock:', stock);\n\n  return (\n    <div\n      className='stock-hover-popup'\n      style={{ top: position.top + 10, left: position.left + 10 }}\n      onMouseEnter={() => console.log('Mouse enter popup')}\n      onMouseLeave={() => console.log('Mouse leave popup')}>\n      <div className='popup-header'>\n        <div className='popup-ticker'>\n          <span className='stock-symbol'>{stock.ticker}</span>\n          <span className='stock-name'>{stock.name}</span>\n        </div>\n        <button className='watch-button' onClick={handleAddToWatchlist}>\n          Watch\n        </button>\n      </div>\n      <div className='popup-price'>\n        <span className='stock-price'>${stock.price}</span>\n        <span className={`price-change ${changeClass}`}>\n          <FontAwesomeIcon icon={arrowIcon} /> {stock.priceChange} (\n          {changePercent}%)\n        </span>\n      </div>\n      <div className='popup-chart'>\n        {/* Placeholder for chart */}\n        <div className='line-chart'></div>\n      </div>\n      <div className='popup-description'>\n        {stock.description || 'No description available.'}\n      </div>\n    </div>\n  );\n};\n\nexport default StockHoverPopup;\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faCircleInfo,\n} from '@fortawesome/free-solid-svg-icons';\nimport './TrendingToolbar.scss';\nimport StockHoverPopup from '../StockHoverPopup/StockHoverPopup';\nimport { useDispatch } from 'react-redux';\nimport { addToWatchlist } from '../../features/watchlist/watchlistSlice'; // Updated path\n\nconst TrendingToolbar = () => {\n  const dispatch = useDispatch();\n  const [indexData, setIndexData] = useState({});\n  const [trendingStocks, setTrendingStocks] = useState([]);\n  const [hoveredStock, setHoveredStock] = useState(null);\n  const [hoverPosition, setHoverPosition] = useState({ top: 0, left: 0 });\n  const [showPercentChange, setShowPercentChange] = useState(true);\n\n  const manualStocks = [\n    'AAPL',\n    'AMZN',\n    'GOOG',\n    'SHOP',\n    'AFRM',\n    'GME',\n    'ADBE',\n    'TSLA',\n    'MSFT',\n    'NVDA',\n    'AMD',\n    'PYPL',\n    'NFLX',\n    'SNAP',\n    'SPOT',\n    'PINS',\n    'TSM',\n    'UBER',\n    'LYFT',\n    'SQ',\n    'ROKU',\n    'CRWD',\n    'DOCU',\n    'META',\n    'PLTR',\n    'AVGO',\n    'OKTA',\n    'RIVN',\n    'PDD',\n    'DDOG',\n    'AMC',\n    'BA',\n    'BABA',\n    'BAC',\n    'C',\n    'DIS',\n    'F',\n    'GE',\n    'GME',\n    'GS',\n    'HD',\n    'IBM',\n    'INTC',\n    'JNJ',\n    'JPM',\n    'KO',\n    'MCD',\n    'SMCI',\n    'HOOD',\n    'OXY',\n    'NKE',\n    'PFE',\n    'PG',\n    'MRVL',\n    'UNH',\n    'V',\n    'VZ',\n    'WBA',\n    'ARM',\n    'XOM',\n  ];\n  const indexTickers = ['SPY', 'QQQ', 'IWM', 'DIA'];\n\n  const apiKey = process.env.REACT_APP_POLYGON_API_KEY;\n\n  useEffect(() => {\n    const fetchData = async (ticker, isIndex = false) => {\n      try {\n        const response = await fetch(\n          `https://api.polygon.io/v2/snapshot/locale/us/markets/stocks/tickers/${ticker}?apiKey=${apiKey}`\n        );\n        const data = await response.json();\n        if (isIndex) {\n          setIndexData((prevData) => ({ ...prevData, [ticker]: data.ticker }));\n        } else {\n          return data.ticker;\n        }\n      } catch (error) {\n        console.error(`Error fetching data for ${ticker}:`, error);\n        return null;\n      }\n    };\n\n    const fetchTrendingStocks = async () => {\n      const stockDataPromises = manualStocks.map((ticker) => fetchData(ticker));\n      const stockData = await Promise.all(stockDataPromises);\n      setTrendingStocks(stockData.filter((stock) => stock !== null));\n    };\n\n    indexTickers.forEach((ticker) => fetchData(ticker, true));\n    fetchTrendingStocks();\n  }, [apiKey]);\n\n  const renderStock = (stock, index) => {\n    if (!stock) return null;\n    const changePercent = stock.todaysChangePerc.toFixed(2);\n    const changeClass = changePercent >= 0 ? 'positive' : 'negative';\n    const arrowIcon = changePercent >= 0 ? faArrowUp : faArrowDown;\n\n    return (\n      <div\n        key={`${stock.ticker}-${index}`}\n        className={`stock-item ${changeClass}`}\n        onMouseEnter={(e) => {\n          setHoveredStock(stock);\n          setHoverPosition({ top: e.clientY, left: e.clientX });\n        }}\n        onMouseLeave={() => setHoveredStock(null)}>\n        <span className='stock-symbol'>{stock.ticker}</span>\n        {showPercentChange ? (\n          <>\n            <FontAwesomeIcon icon={arrowIcon} />\n            <span className='stock-percent'>{changePercent}%</span>\n          </>\n        ) : (\n          <span className='stock-price'>${stock.day.c.toFixed(2)}</span>\n        )}\n      </div>\n    );\n  };\n\n  const renderIndexData = (ticker) => {\n    const data = indexData[ticker];\n    if (!data) return null;\n    const changePercent = data.todaysChangePerc.toFixed(2);\n    const changeClass = changePercent >= 0 ? 'positive' : 'negative';\n    const arrowIcon = changePercent >= 0 ? faArrowUp : faArrowDown;\n\n    return (\n      <div key={ticker} className={`index-item ${changeClass}`}>\n        <span className='stock-symbol'>{data.ticker}</span>\n        {showPercentChange ? (\n          <>\n            <FontAwesomeIcon icon={arrowIcon} />\n            <span className='stock-percent'>{changePercent}%</span>\n          </>\n        ) : (\n          <span className='stock-price'>${data.day.c.toFixed(2)}</span>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className='trending-toolbar'>\n      <div className='form-check form-switch'>\n        <input\n          className='form-check-input'\n          type='checkbox'\n          id='toggleSwitch'\n          checked={showPercentChange}\n          onChange={() => setShowPercentChange(!showPercentChange)}\n        />\n      </div>\n      <div className='index-data'>\n        {indexTickers.map((ticker) => renderIndexData(ticker))}\n        <span className='trending-label text-secondary'>\n          Trending <FontAwesomeIcon icon={faCircleInfo} />\n        </span>\n      </div>\n      <div className='trending-stocks'>\n        <div className='scroll-container'>\n          {[...trendingStocks, ...trendingStocks].map(renderStock)}\n        </div>\n      </div>\n      {hoveredStock && (\n        <StockHoverPopup stock={hoveredStock} position={hoverPosition} />\n      )}\n    </div>\n  );\n};\n\nexport default TrendingToolbar;\n"],"names":["_ref","stock","position","dispatch","useDispatch","changePercent","todaysChangePerc","toFixed","changeClass","arrowIcon","faArrowUp","faArrowDown","console","log","_jsxs","className","style","top","left","onMouseEnter","onMouseLeave","children","_jsx","ticker","name","onClick","handleAddToWatchlist","addToWatchlist","price","FontAwesomeIcon","icon","priceChange","description","TrendingToolbar","indexData","setIndexData","useState","trendingStocks","setTrendingStocks","hoveredStock","setHoveredStock","hoverPosition","setHoverPosition","showPercentChange","setShowPercentChange","manualStocks","indexTickers","apiKey","process","useEffect","fetchData","async","isIndex","arguments","length","undefined","response","fetch","data","json","prevData","error","forEach","stockDataPromises","map","stockData","Promise","all","filter","fetchTrendingStocks","type","id","checked","onChange","_Fragment","day","c","renderIndexData","faCircleInfo","renderStock","index","e","clientY","clientX","StockHoverPopup"],"sourceRoot":""}