{"version":3,"file":"static/js/938.79dcdf1e.chunk.js","mappings":"gNAQA,MAyGA,EAvGuBA,KACrB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,UAAUG,WAClDC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,CAAC,IACrCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,GAAQV,EAAAA,EAAAA,KAAaC,GAAUA,EAAMS,SAE3CC,EAAAA,EAAAA,YAAU,KAeR,GAAIZ,EAAUa,OAAS,EAAG,CACxBL,GAAW,GACX,MAAMM,EAAYC,gBACVC,QAAQC,IAAIjB,EAAUkB,KAAKC,GAjBdJ,WACrB,IACE,MAAMK,EAAM,uEAAuED,4CAC7EE,QAAiBC,EAAAA,EAAMC,IAAIH,GACjCf,GAAcmB,IAAQ,IACjBA,EACH,CAACL,GAASE,EAASI,KAAKC,UAE5B,CAAE,MAAOjB,GACPkB,QAAQlB,MAAM,6BAA8BA,GAC5CC,EAAS,8BACX,GAM8CkB,CAAeT,MAC3DX,GAAW,EAAM,EAEnBM,GACF,IACC,CAACd,IAMJ,OACE6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAC,uBAElCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,CACvBtB,IAASuB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAEtB,IACjCF,GACCyB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBACoB,IAArB/B,EAAUa,QACZmB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BAEHF,EAAAA,EAAAA,MAAA,SACEC,UAAW,6BACC,SAAVnB,EAAmB,aAAe,IACjCoB,SAAA,EACHC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SACJC,EAAAA,EAAAA,KAAA,eAGJA,EAAAA,EAAAA,KAAA,SAAAD,SACG/B,EAAUkB,KAAKC,IACd,MAAMM,EAAOrB,EAAUe,IAAW,CAAC,GAC7B,IAAEc,EAAG,QAAEC,GAAYT,EAEnBU,EAAYF,EAAMA,EAAIG,EAAI,GAC1BC,EACJF,GAAaD,GACRC,EAAYD,EAAQE,GAAGE,QAAQ,GAChC,GACAC,EACJF,GAAUH,GACJG,EAASH,EAAQE,EAAK,KAAKE,QAAQ,GACrC,GACAE,EAASP,EAAMA,EAAIQ,EAAI,GAE7B,OACEZ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKZ,KACLa,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,KACLH,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,KACLR,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKQ,EAAc,QACnBP,EAAAA,EAAAA,KAAA,MAAAD,SAAKS,KACLR,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,EAAe,CACdC,KAAMC,EAAAA,IACNC,QAASA,IAxDT1B,KACpBrB,GAASgD,EAAAA,EAAAA,IAAoB3B,GAAQ,EAuDF4B,CAAa5B,SATzBA,EAYJ,cAOb,C","sources":["components/StockWatchlist/StockWatchlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeFromWatchlist } from '../../features/watchlist/watchlistSlice'; // Updated path\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './StockWatchlist.scss';\n\nconst apiKey = process.env.REACT_APP_POLYGON_API_KEY;\n\nconst StockWatchlist = () => {\n  const dispatch = useDispatch();\n  const watchlist = useSelector((state) => state.watchlist.symbols);\n  const [stockData, setStockData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const theme = useSelector((state) => state.theme);\n\n  useEffect(() => {\n    const fetchStockData = async (symbol) => {\n      try {\n        const url = `https://api.polygon.io/v2/snapshot/locale/us/markets/stocks/tickers/${symbol}?apiKey=${apiKey}`;\n        const response = await axios.get(url);\n        setStockData((prevData) => ({\n          ...prevData,\n          [symbol]: response.data.ticker,\n        }));\n      } catch (error) {\n        console.error('Error fetching stock data:', error);\n        setError('Failed to fetch stock data.');\n      }\n    };\n\n    if (watchlist.length > 0) {\n      setLoading(true);\n      const fetchData = async () => {\n        await Promise.all(watchlist.map((symbol) => fetchStockData(symbol)));\n        setLoading(false);\n      };\n      fetchData();\n    }\n  }, [watchlist]);\n\n  const handleRemove = (symbol) => {\n    dispatch(removeFromWatchlist(symbol));\n  };\n\n  return (\n    <div className='card'>\n      <div className='card-header'>\n        <h5 className='card-title mb-0'>Stock Watchlist</h5>\n      </div>\n      <div className='card-body'>\n        {error && <div className='error'>{error}</div>}\n        {loading ? (\n          <p>Loading data...</p>\n        ) : watchlist.length === 0 ? (\n          <p>No stocks in watchlist</p>\n        ) : (\n          <table\n            className={`table table-striped mt-3 ${\n              theme === 'dark' ? 'table-dark' : ''\n            }`}>\n            <thead>\n              <tr>\n                <th>Symbol</th>\n                <th>Last</th>\n                <th>Chg</th>\n                <th>Chg%</th>\n                <th>Vol</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {watchlist.map((symbol) => {\n                const data = stockData[symbol] || {};\n                const { day, prevDay } = data;\n\n                const lastPrice = day ? day.c : '';\n                const change =\n                  lastPrice && prevDay\n                    ? (lastPrice - prevDay.c).toFixed(2)\n                    : '';\n                const changePercent =\n                  change && prevDay\n                    ? ((change / prevDay.c) * 100).toFixed(2)\n                    : '';\n                const volume = day ? day.v : '';\n\n                return (\n                  <tr key={symbol}>\n                    <td>{symbol}</td>\n                    <td>{lastPrice}</td>\n                    <td>{change}</td>\n                    <td>{changePercent}%</td>\n                    <td>{volume}</td>\n                    <td>\n                      <FontAwesomeIcon\n                        icon={faTrash}\n                        onClick={() => handleRemove(symbol)}\n                      />\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StockWatchlist;\n"],"names":["StockWatchlist","dispatch","useDispatch","watchlist","useSelector","state","symbols","stockData","setStockData","useState","loading","setLoading","error","setError","theme","useEffect","length","fetchData","async","Promise","all","map","symbol","url","response","axios","get","prevData","data","ticker","console","fetchStockData","_jsxs","className","children","_jsx","day","prevDay","lastPrice","c","change","toFixed","changePercent","volume","v","FontAwesomeIcon","icon","faTrash","onClick","removeFromWatchlist","handleRemove"],"sourceRoot":""}