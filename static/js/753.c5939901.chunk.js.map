{"version":3,"file":"static/js/753.c5939901.chunk.js","mappings":"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","sources":["components/Portfolio/PortfolioView.js","components/StockDetails/StockDetails.js","pages/PortfolioPage/PortfolioPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPortfolio } from '../../features/portfolio/portfolioSlice';\nimport { fetchStockDetails } from '../../features/stocks/stockThunks';\nimport { selectTheme } from '../../features/theme/themeSelectors';\n\nconst Portfolio = ({ userId }) => {\n  const dispatch = useDispatch();\n  const portfolio = useSelector((state) => state.portfolio.portfolio);\n  const status = useSelector((state) => state.portfolio.status);\n  const error = useSelector((state) => state.portfolio.error);\n  const theme = useSelector(selectTheme);\n\n  // New selector for fetching stock details\n  const stockDetails = useSelector((state) => state.stocks.stockDetails);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPortfolio(userId));\n    }\n  }, [status, dispatch, userId]);\n\n  // Fetch stock details when portfolio is available\n  useEffect(() => {\n    if (portfolio?.stocks) {\n      portfolio.stocks.forEach((stock) => {\n        dispatch(fetchStockDetails(stock.symbol));\n      });\n    }\n  }, [dispatch, portfolio]);\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!portfolio || !portfolio.stocks) {\n    return <div>No portfolio data available</div>;\n  }\n\n  return (\n    <div className='container mt-4'>\n      <table\n        className={`table table-striped table-hover ${\n          theme === 'theme-dark' ? 'table-dark' : ''\n        }`}>\n        <thead className='thead-dark'>\n          <tr>\n            <th scope='col'>Holding</th>\n            <th scope='col'>Shares</th>\n            <th scope='col'>Cost per share</th>\n            <th scope='col'>Cost basis</th>\n            <th scope='col'>Current value</th>\n            <th scope='col'>Dividends</th>\n            <th scope='col'>Dividend yield</th>\n            <th scope='col'>Total profit</th>\n            <th scope='col'>Daily</th>\n          </tr>\n        </thead>\n        <tbody>\n          {portfolio.stocks.map((stock, index) => {\n            const details = stockDetails[stock.symbol]; // Access the details from state\n            return (\n              <tr key={index}>\n                <td>{stock.symbol}</td>\n                <td>{stock.shares}</td>\n                <td>${stock.buyPrice}</td>\n                <td>${(stock.shares * stock.buyPrice).toFixed(2)}</td>\n                <td>${(stock.shares * stock.currentPrice).toFixed(2)}</td>\n                <td>$0.00</td>\n                <td>0%</td>\n                <td\n                  className={\n                    stock.currentPrice > stock.buyPrice\n                      ? 'text-success'\n                      : 'text-danger'\n                  }>\n                  $\n                  {(\n                    stock.shares *\n                    (stock.currentPrice - stock.buyPrice)\n                  ).toFixed(2)}\n                </td>\n                <td\n                  className={\n                    stock.currentPrice > stock.buyPrice\n                      ? 'text-success'\n                      : 'text-danger'\n                  }>\n                  ${(stock.currentPrice - stock.buyPrice).toFixed(2)}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <p className='mt-4 fw-bold'>Total Value: ${portfolio.totalValue}</p>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchStockDetails } from '../../features/stocks/stockThunks';\nimport { selectStockDetails } from '../../features/stocks/stockSelectors';\nimport './StockDetails.scss';\nimport { formatCurrency } from '../../utils/format';\n\nconst StockDetails = ({ symbol }) => {\n  const dispatch = useDispatch();\n  const stockDetails = useSelector((state) =>\n    selectStockDetails(state, symbol)\n  );\n  const loading = useSelector((state) => state.stocks.loading);\n  const error = useSelector((state) => state.stocks.error);\n\n  useEffect(() => {\n    dispatch(fetchStockDetails(symbol));\n  }, [dispatch, symbol]);\n\n  if (loading) return <div className='stock-details'>Loading...</div>;\n  if (error)\n    return <div className='stock-details'>Error fetching stock details</div>;\n  if (!stockDetails)\n    return <div className='stock-details'>No stock details available</div>;\n\n  const {\n    name,\n    description,\n    branding: { icon_url, logo_url } = {},\n    market_cap,\n    phone_number,\n    total_employees,\n    locale,\n    primary_exchange,\n    ticker,\n    sic_description,\n    address1,\n    city,\n    postal_code,\n    state,\n  } = stockDetails;\n\n  return (\n    <div className='stock-details-card'>\n      <div className='stock-header'>\n        <img\n          src={`https://assets.parqet.com/logos/symbol/${symbol}`}\n          alt={`${name} logo`}\n          className='stock-logo'\n        />\n        <h2>{name}</h2>\n      </div>\n      <div className='stock-body'>\n        <div className='stock-info'>\n          <p>\n            <strong>Description:</strong> {description}\n          </p>\n          <p>\n            <strong>Market Cap:</strong> {formatCurrency(market_cap)}\n          </p>\n          <p>\n            <strong>Phone:</strong> {phone_number}\n          </p>\n          <p>\n            <strong>Employees:</strong> {total_employees}\n          </p>\n          <p>\n            <strong>Locale:</strong> {locale}\n          </p>\n          <p>\n            <strong>Primary Exchange:</strong> {primary_exchange}\n          </p>\n          <p>\n            <strong>Ticker:</strong> {ticker}\n          </p>\n          <p>\n            <strong>SIC Description:</strong> {sic_description}\n          </p>\n        </div>\n        <div className='stock-address'>\n          <h4>Address</h4>\n          <p>{address1}</p>\n          <p>\n            {city}, {state} {postal_code}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StockDetails;\n","// src/pages/PortfolioPage.js\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPortfolio } from '../../features/portfolio/portfolioSlice';\nimport Portfolio from '../../components/Portfolio/PortfolioView';\nimport StockDetails from '../../components/StockDetails/StockDetails';\n\nconst PortfolioPage = () => {\n  const dispatch = useDispatch();\n  const testUserId = 'testUserId123'; // Replace with your test user ID\n  const portfolio = useSelector((state) => state.portfolio.portfolio);\n  const status = useSelector((state) => state.portfolio.status);\n  const error = useSelector((state) => state.portfolio.error);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPortfolio(testUserId));\n    }\n  }, [status, dispatch, testUserId]);\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  // Ensure portfolio is not undefined or null before rendering\n  if (!portfolio || !portfolio.stocks) {\n    return <div>No portfolio data available</div>;\n  }\n\n  return (\n    <div className='container mt-4'>\n      <h2 className='mb-4'>Stock Portfolio</h2>\n      <Portfolio portfolio={portfolio} />\n      <div className='mt-4'>\n        <h3>Stock Details</h3>\n        <StockDetails symbol={portfolio.stocks[0].symbol} />{' '}\n        {/* Example usage */}\n      </div>\n      <p>Built with Express.js, MongoDB, GraphQL, Apollo Server</p>\n    </div>\n  );\n};\n\nexport default PortfolioPage;\n"],"names":["_ref","userId","dispatch","useDispatch","portfolio","useSelector","state","status","error","theme","selectTheme","stockDetails","stocks","useEffect","fetchPortfolio","forEach","stock","fetchStockDetails","symbol","_jsx","children","_jsxs","className","scope","map","index","shares","buyPrice","toFixed","currentPrice","totalValue","selectStockDetails","loading","name","description","branding","icon_url","logo_url","market_cap","phone_number","total_employees","locale","primary_exchange","ticker","sic_description","address1","city","postal_code","src","alt","formatCurrency","PortfolioPage","testUserId","Portfolio","StockDetails"],"sourceRoot":""}